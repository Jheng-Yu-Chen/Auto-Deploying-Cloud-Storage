#!/bin/bash

source ./config/config
source ./script/functions

echo ""
if [ "$http_port" -eq 443 ]; then
	for host in $hosts
	do
		echo  "正在${host}安裝httpd php php-mysql php-gd php-xml php-mbstring mod_ssl ....." | tee -a deploy.log
        	remote_cmd "$host" "yum install -y httpd php php-mysql php-gd php-xml php-mbstring mod_ssl --setopt=sslverify=false"
        	check_status || exit 1
	done
else
	for host in $hosts
	do
		echo  "正在${host}安裝httpd php php-mysql php-gd php-xml php-mbstring ....." | tee -a deploy.log
		remote_cmd "$host" "yum install -y httpd php php-mysql php-gd php-xml php-mbstring --setopt=sslverify=false"
		check_status || exit 1
	done
fi

echo ""
echo -n "正在產生httpd.conf檔 ..... " | tee -a deploy.log
cp -a config/service_configs/httpd.conf tmp/ 2>> deploy.log
check_status

if [ "$http_port" -ne 443 ]; then
	var=`grep "^Listen" tmp/httpd.conf`
	if [ "$var" ]; then
		echo -n "設定HTTP Listen port為${http_port} ..... " | tee -a deploy.log
		sed -i "s/$var/Listen $http_port/g" tmp/httpd.conf 2>> deploy.log 
		check_status
	fi
fi

var=`cat -n tmp/httpd.conf | grep "DocumentRoot" | grep -v "#" | awk '{ print $1 }'`
if [ "$var" ]; then
        echo -n "設定DocumentRoot為${http_dir} ..... " | tee -a deploy.log
        sed -i.bak "${var}c DocumentRoot \"$http_dir\"" tmp/httpd.conf 2>> deploy.log
        check_status
fi

var=`cat -n tmp/httpd.conf | grep '<Directory "/var/www/html">' | awk '{ print $1 }'`
if [ "$var" ]; then
        echo -n "設定Directory為${http_dir} ..... " | tee -a deploy.log
        sed -i.bak "${var}c <Directory \"$http_dir\">" tmp/httpd.conf 2>> deploy.log
        check_status
fi

if [ "$http_port" -eq 443 ]; then
	var=`grep "SSLRequireSSL" tmp/httpd.conf `
	if [ "var" ]; then
		echo -n "設定強制以HTTPS連線 ..... " | tee -a deploy.log
		sed -i.bak 's/^#   SSLRequireSSL/    SSLRequireSSL/' tmp/httpd.conf
		check_status
	fi
fi

echo ""
for host in $hosts
do
	echo -n "正在將httpd.conf複製到${host} ..... " | tee -a deploy.log
	scp -P "$ssh_port" tmp/httpd.conf "$deploy_user"@"$host":/etc/httpd/conf/ > /dev/null 2>> deploy.log
	check_status
done

echo ""
for host in $hosts
do
	echo -n "正在${host}修改welcome.conf ..... " | tee -a deploy.log
	remote_cmd ${host} "sed -i 's/^\([^#]\)/#\1/g' /etc/httpd/conf.d/welcome.conf"
	check_status || exit 1
done

echo ""
echo -n "正在產生php.ini檔 ..... " | tee -a deploy.log
cp -a config/service_configs/php.ini tmp/ 2>> deploy.log
check_status || exit 1

#var=`cat -n tmp/php.ini | grep 'open_basedir' | grep -v ';' | awk '{ print $1 }'`
#if [ "$var" ]; then
#        echo -n "設定open_basedir為${http_dir}/${owncloud_dir} ..... " | tee -a deploy.log
#        sed -i.bak "${var}c open_basedir = ${http_dir}/${owncloud_dir}/:/tmp/" tmp/php.ini 2>> deploy.log
#        check_status || exit 1
#fi


echo ""
for host in $hosts
do
	echo -n "正在將php.ini複製到${host} ..... " | tee -a deploy.log
	scp -P "$ssh_port" tmp/php.ini "$deploy_user"@"$host":/etc/ > /dev/null 2>> deploy.log
	check_status || exit 1
done

if [ "$perf_tuning" == "yes" ]; then
	source ./tmp/tuning_info

	echo ""
	for host in $hosts
	do
		echo -n "正在${host}安裝php-pecl-apc ..... " | tee -a deploy.log
		remote_cmd "$host" "yum install php-pecl-apc -y --setopt=sslverify=false"
		check_status || exit 1
	done

	echo -n "正在產生apc.ini檔 ..... " | tee -a deploy.log
	cp -a config/service_configs/apc.ini tmp/ 2>> deploy.log
	check_status || exit 1
	
	var=`cat -n tmp/apc.ini | grep  'apc.shm_size' | awk '{ print $1 }'`
	size=`echo "${avail_mem}/2" | bc`
	echo -n "正在修改apc.shm_size的值為${size}MB ..... " | tee -a deploy.log
        sed -i.bak "${var}c apc.shm_size=${size}M" tmp/apc.ini 2>> deploy.log
	check_status || exit 1

	for host in $hosts
	do
		echo -n "正在將apc.ini佈署到${host} ..... " | tee -a deploy.log
		scp -P "$ssh_port" tmp/apc.ini "$deploy_user"@"$host":/etc/php.d > /dev/null 2>> deploy.log
		check_status || exit 1
	done
	
fi

echo ""
for host in $hosts
do
        echo -n "正在${host}啟動Apache ..... " | tee -a deploy.log
        remote_cmd "$host" "service httpd restart" > /dev/null 
	check_status || exit 1

done

for host in $hosts
do
        echo -n "正在${host}設定開機自動啟動Apache ..... " | tee -a deploy.log
	remote_cmd "$host" "chkconfig httpd on"
	check_status || exit 1

done

echo ""
echo -n "正在下載OwnCloud ..... " | tee -a deploy.log
wget -P "tmp/" -c "$owncloud" | tee -a deploy.log
check_status || exit 1

echo -n "請稍候，正在解壓縮 ..... " | tee -a deploy.log
tar -jxvf tmp/owncloud*.tar.bz2 -C "tmp/" > /dev/null 2>> deploy.log
check_status || exit 1

echo -n "正在修改權限 ..... " | tee -a deploy.log
chown -R apache:apache tmp/owncloud > /dev/null 2>> deploy.log
check_status || exit 1

if [ -e "${http_dir}/${owncloud_dir}/config/config.php" ]; then
	echo -n "偵測到owncloud設定檔存在，正在刪除 ..... " | tee -a deploy.log
	rm -rf "${http_dir}/${owncloud_dir}/config/config.php" 2>> deploy.log
	check_status || exit 1
fi

echo -n "正在佈署OwnCloud ..... " | tee -a deploy.log
mkdir -p ${http_dir}/${owncloud_dir} > /dev/null 2>> deploy.log && \
cp -a tmp/owncloud/* ${http_dir}/${owncloud_dir} > /dev/null 2>> deploy.log && \
chown apache:apache ${http_dir}/${owncloud_dir} > /dev/null 2>> deploy.log
check_status || exit 1

echo -n "正在設定OwnCloud語系 ..... " | tee -a deploy.log
#line_num=`cat -n ${http_dir}owncloud/lib/l10n.php | grep 'protected static $language = ' | awk '{ print $1 }'`
#sed -i.bak "${line_num}c protected static \$language = '${owncloud_lang}';"  ${http_dir}/owncloud/lib/l10n.php
sed -i.bak "40c protected static \$language = '${owncloud_lang}';"  ${http_dir}/owncloud/lib/l10n.php
check_status

echo ""
echo "您現在可以連到下列任一網址設定OwnCloud!"
for host in $hosts
do
	if [ "$http_port" -eq 443 ]; then
		echo "https://${host}/${owncloud_dir}" | tee -a deploy.log
	else
		if [ "$http_port" -eq 80 ]; then
			echo "http://${host}/${owncloud_dir}" | tee -a deploy.log
		else
			echo "http://${host}:${http_port}/${owncloud_dir}" | tee -a deploy.log
		fi
	fi
done
